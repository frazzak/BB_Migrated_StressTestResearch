#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Apr  3 23:22:36 2018

@author: phn1x
"""

#Libraries

import sys,os, subprocess
#import pandas as pd

#TODO:Integrate to R script which generates API requests for reports from FFIEC website to attain raw files.
#Integrate into one python module wrapper
#import rpy2



#Integrate applescript that will convert raw Secured PDFs and export them using Preview.app to unsecure them in prepreation for tabula conversion
#import applescript #Not working due to some issues in the Foundation Module and pyobjc issues
#import appscript

#Tabula python wrapper to integrate into python rather than do system calls to jar file which is successful at the moment.
import tabula

#PDF Security Restriction removal via Preview Export.
#Will Only Run on MAC with Desktop and Preview APP

def ExportAsPDF_Preview(homepath, basepath, sourcefolder, tempfolder, destfolder, script_path = '/Users/phn1x/ICDM_Research/Stress_Test_Research/StressTest_Research/BHC_PDF_Parser/PreviewPDFConverter.scpt', deletesource = False):

    
    try:
        print("Converting Secured PDF with Preview.app Export as PDF Feature")    
        proc_out = subprocess.Popen(['osascript', script_path, basepath, sourcefolder, destfolder, tempfolder],
                                stdin=subprocess.PIPE,
                                stdout=subprocess.PIPE,
                                universal_newlines=True
                                ).communicate()
        #print(proc_out.communicate()[0])
    except Exception as e:
        print(e)
    
    
    if deletesource:
        print ("Deleting Files in Source Folder")
        folder = os.path.join(basepath,sourcefolder)
        for the_file in os.listdir(folder):
            file_path = os.path.join(folder, the_file)
            try:
                if os.path.isfile(file_path):
                    os.unlink(file_path)
                #elif os.path.isdir(file_path): shutil.rmtree(file_path)
            except Exception as a:
                print(a)        
                
    
    return("Export to PDF with Preview.app Completed")


def Tabula_UnsecurePDF_Convert(unsecuredpdfpath, outputfolder, output_format = "csv", pages = 'all',guess = True, fileextension = ('.pdf','.PDF'), deletesource = False):     
#Stream lined way to import tables into python environment for parsing    
    paths = [ os.path.join(unsecuredpdfpath,fn) for fn in os.listdir(unsecuredpdfpath) if fn.endswith(fileextension)]
    for i in range(0,len(paths)):
        try: 
            print("Converting File:" + paths[i])
            tabula.convert_into(paths[i],os.path.join(outputfolder,os.path.splitext(os.path.basename(paths[i]))[0] + ".csv"), output_format = "csv", guess = True, multiple_tables = True, pages = 'all')
            print("Successfully Converted:" + paths[i] + " Output:" + os.path.join(outputfolder,os.path.splitext(os.path.basename(paths[i]))[0] + ".csv"))
   
 
            if deletesource:
                print ("Deleting File in Source Folder")
        
                try:
                    if os.path.isfile(paths[i]):
                        os.unlink(paths[i])
                    #elif os.path.isdir(file_path): shutil.rmtree(file_path)
                except Exception as a:
                    print(a)      
        except Exception as e:
            print(e)        
            
   
    
    return("Tabula PDF to File conversion completed")   






def main():

    #Variables
    
    #Manual way to convert to csv
    #paths = [folder + fn for fn in os.listdir(folder) if fn.endswith(('.pdf','.PDF'))]
    #tabula_jarpath = os.path.join(basepath,'/tabula/tabula-1.0.1-jar-with-dependencies.jar')
    #base_command = 'java -jar ' + tabula_jarpath + ' -p all -f CSV -g -d -o {} {}'
    #Variables
    homepath = os.environ['HOME']
    basepath = os.path.join(homepath,'ICDM_Research/Stress_Test_Research/StressTest_Research/')
    sourcefolder = "raw_pdf"
    tempfolder = os.path.join(homepath,"Desktop")
    destfolder = "unsecured_pdf"
    tabulaoutput = os.path.join(basepath,"tabula_csv")
    #Currently has to be Desktop since we are using Desktop shortcut in Preiview.app
    
    script_path= os.path.join(basepath,"BHC_PDF_Parser//PreviewPDFConverter.scpt")
    
    #Call Preview.app Converstion
    ExportAsPDF_Preview(homepath, basepath, sourcefolder, tempfolder, destfolder, script_path, deletesource = False)

    #Call for Tabula to convert PDFs to CSV for data manipulation and analysis.
    Tabula_UnsecurePDF_Convert(unsecuredpdfpath = os.path.join(basepath,destfolder), outputfolder = tabulaoutput, deletesource = False)  


if __name__ == "__main__": main()
        
    